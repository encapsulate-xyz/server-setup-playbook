---
- name: Set service identifier
  ansible.builtin.set_fact:
    service_identifier: "{{ ssh.service_identifier }}"

- name: Install ufw
  ansible.builtin.apt:
    name: ufw
    state: present

- name: Enable UFW with logging
  community.general.ufw:
    state: enabled
    logging: medium

- name: Set default incoming policy to deny
  community.general.ufw:
    default: deny
    direction: incoming

- name: Set default outgoing policy to allow
  community.general.ufw:
    default: allow
    direction: outgoing

- name: Stop and disable ssh.socket
  ansible.builtin.systemd:
    name: ssh.socket
    state: stopped
    enabled: false
  register: ssh_socket_status
  failed_when: ssh_socket_status.failed and "not found" not in ssh_socket_status.msg

- name: Change SSH port in sshd_config
  ansible.builtin.lineinfile:
    path: "{{ security_ssh.sshd_config_file_path }}"
    regexp: ^#?Port .*
    line: Port {{ ssh.ports.login }}
    state: present
  notify:
    - Restart service

- name: Modify UFW profile for OpenSSH
  ansible.builtin.lineinfile:
    path: "{{ security_ssh.ufw_profile_path }}"
    regexp: ^ports=.*
    line: ports={{ ssh.ports.login }}/tcp
    state: present
    backup: true

- name: Reload UFW
  community.general.ufw:
    state: reloaded

- name: UFW - Allow SSH connections
  community.general.ufw:
    rule: limit
    name: OpenSSH
    comment: limit SSH login from any ip on tcp protocol

- name: Allow traffic from Monitor Server to Node Exporter
  community.general.ufw:
    rule: allow
    from_ip: "{{ monitor_server_ip }}"
    to_port: "{{ node_exporter.ports.web_listen_address }}"
    proto: tcp
    comment: allow node exporter web_listen_address from {{ monitor_server_dns }} ip on tcp protocol

- name: Allow traffic from Monitor Server to Process Exporter
  community.general.ufw:
    rule: allow
    from_ip: "{{ monitor_server_ip }}"
    to_port: "{{ process_exporter.ports.web_listen_address }}"
    proto: tcp
    comment: allow process exporter web_listen_address from {{ monitor_server_dns }} ip on tcp protocol

- name: Disable root login over SSH
  ansible.builtin.lineinfile:
    dest: "{{ security_ssh.sshd_config_file_path }}"
    regexp: ^PermitRootLogin
    line: PermitRootLogin no
    state: present
  notify:
    - Restart service

- name: Disable password login
  ansible.builtin.lineinfile:
    dest: "{{ security_ssh.sshd_config_file_path }}"
    regexp: ^PasswordAuthentication
    line: PasswordAuthentication no
    state: present
  notify:
    - Restart service

- name: Copy vault.pub to trusted CA path
  ansible.builtin.copy:
    src: vault.pub
    dest: "{{ security_ssh.trusted_ca_file_path }}"
    owner: root
    group: root
    mode: "0644"

# Configure SSH to use vault.pub as the Trusted User CA key
- name: Configure SSH for Trusted User CA
  ansible.builtin.lineinfile:
    path: "{{ security_ssh.sshd_config_file_path }}"
    regexp: ^TrustedUserCAKeys
    line: TrustedUserCAKeys {{ security_ssh.trusted_ca_file_path }}
    state: present
  notify:
    - Restart service
